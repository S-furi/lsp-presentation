<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Homes on Language Server Protocol Presentation</title>
    <link>http://localhost:1313/lsp-presentation/home/</link>
    <description>Recent content in Homes on Language Server Protocol Presentation</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/lsp-presentation/home/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Language Server Protocol - Presentation</title>
      <link>http://localhost:1313/lsp-presentation/home/sec-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/lsp-presentation/home/sec-1/</guid>
      <description>&lt;h2 id=&#34;why-do-we-need-lsp&#34;&gt;Why do we need LSP?&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Code editor should provide language support&lt;/li&gt;&#xA;&lt;li&gt;Standard approach: a new implementation for each language and editor&lt;/li&gt;&#xA;&lt;li&gt;Better approach: language server communicating with editor using standarized protocol&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;img/idea.png&#34; alt=&#34;How it works&#34;&gt;&lt;/p&gt;&#xA;&#xA;&#xA;&#xA;&lt;aside class=&#34;notes&#34;&gt;&#xA;* IDE or simpler editor.&#xA;* autocompletion, goto definition, or documentation on hover&#xA;* server can be reused&#xA;&lt;/aside&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;what-is-lsp&#34;&gt;What is LSP?&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Protocol used between editors and servers that provide language support&lt;/li&gt;&#xA;&lt;li&gt;JSON-RPC-based&lt;/li&gt;&#xA;&lt;li&gt;Originally developed for Microsoft Visual Studio Code, now open standard&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;Content-Length:&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;...\r\n&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;\r\n&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;jsonrpc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;2.0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;method&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;textDocument/completion&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;params&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a40000&#34;&gt;...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&#xA;&#xA;&lt;aside class=&#34;notes&#34;&gt;&#xA;* Code completion, syntax highlighting, marking of warnings and errors, and help with refactoring&#xA;* RPC (Remote Procedure Call) is a protocol that allows a program to execute a procedure or function on a remote computer or server as if it were a local call, simplifying distributed application development by abstracting away the complexities of network communication.&#xA;&lt;/aside&gt;&#xA;&lt;hr&gt;&#xA;&#xA;&#xA;&lt;section data-shortcode-section&gt;&#xA;&lt;h2 id=&#34;key-concepts-of-lsp&#34;&gt;Key concepts of LSP&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;overview&#34;&gt;Overview&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Client&lt;/strong&gt;: editor&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Server&lt;/strong&gt;: language server&lt;/li&gt;&#xA;&lt;li&gt;Exchange through stdio or socket&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;messages.png&#34; alt=&#34;Exchange of messages&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Language Server Protocol - Presentation</title>
      <link>http://localhost:1313/lsp-presentation/home/sec-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/lsp-presentation/home/sec-2/</guid>
      <description>&lt;h2 id=&#34;a-simple-kotlin-example&#34;&gt;A Simple Kotlin Example&lt;/h2&gt;</description>
    </item>
  </channel>
</rss>
