<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Homes on Language Server Protocol Presentation</title>
    <link>http://localhost:1313/lsp-presentation/home/</link>
    <description>Recent content in Homes on Language Server Protocol Presentation</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="http://localhost:1313/lsp-presentation/home/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LSP Presentation - JetBrains Internship Summer 2025</title>
      <link>http://localhost:1313/lsp-presentation/home/sec-1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/lsp-presentation/home/sec-1/</guid>
      <description>&lt;h2 id=&#34;base-protocol&#34;&gt;Base Protocol&lt;/h2&gt;&#xA;&lt;p&gt;The base protocol consists of a header and a content part (comparable to HTTP).&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Header&lt;/strong&gt; &lt;em&gt;must&lt;/em&gt; contain the &lt;code&gt;Content-Length&lt;/code&gt; value, plus it can include a &lt;code&gt;Content-Type&lt;/code&gt;.&#xA;If no &lt;code&gt;Content-Type&lt;/code&gt; is provided, default is &lt;code&gt;application/vscode-jsonrpc;charset=utf-8&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Content part&lt;/strong&gt; begins after the header, marked with a double &lt;code&gt;\r\n&lt;/code&gt; (like HTTP), and uses &lt;strong&gt;&lt;code&gt;JSON-RPC&lt;/code&gt;&lt;/strong&gt; (&lt;a href=&#34;https://www.jsonrpc.org&#34;&gt;https://www.jsonrpc.org&lt;/a&gt;)&#xA;to describe &lt;em&gt;requests&lt;/em&gt;, &lt;em&gt;responses&lt;/em&gt; and &lt;em&gt;notifications&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;Content-Length:&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;...\r\n&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;\r\n&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;jsonrpc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;2.0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;method&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;textDocument/completion&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;params&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#a40000&#34;&gt;...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;&#xA;&#xA;&#xA;&lt;section data-shortcode-section&gt;&#xA;&lt;h3 id=&#34;json-rpc&#34;&gt;JSON-RPC&lt;/h3&gt;&#xA;&lt;p&gt;JSON-RPC is a stateless, lightweight RPC protocol, where an RPC &lt;em&gt;call&lt;/em&gt; is a JSON object composed as follows:&lt;/p&gt;</description>
    </item>
    <item>
      <title>LSP Presentation - JetBrains Internship Summer 2025</title>
      <link>http://localhost:1313/lsp-presentation/home/sec-2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/lsp-presentation/home/sec-2/</guid>
      <description>&lt;h2 id=&#34;language-server-protocol&#34;&gt;Language Server Protocol&lt;/h2&gt;&#xA;&lt;p&gt;Defines a set of JSON-RPC requests, response and notification messages in order&#xA;to standardize communication between developement tools and language specific&#xA;servers.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;capabilities&#34;&gt;Capabilities&lt;/h3&gt;&#xA;&lt;p&gt;A language server and a client can have different sets of capabilities, i.e. groups of &lt;strong&gt;language features&lt;/strong&gt;. This set of capabilities is exchanged between client and server in the &lt;em&gt;initialization phase&lt;/em&gt; in order to make them agree over which features are supported in the session.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
